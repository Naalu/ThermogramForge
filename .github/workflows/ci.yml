---
name: Thermogram Analysis CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11"]
        include:
          - os: ubuntu-latest
            python-version: "3.10"
            r: true

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv (Unix)
        if: runner.os != 'Windows'
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install uv (Windows)
        if: runner.os == 'Windows'
        run: |
          iwr https://astral.sh/uv/install.ps1 -useb | iex
          echo "$HOME/.uv/bin" | `
            Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Set up R (only on R node)
        if: ${{ matrix.r }}
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: "4.x"

      - name: Install R dependencies (only on R node)
        if: ${{ matrix.r }}
        run: |
          if [ -e ".Rprofile" ]; then
            sudo Rscript -e "source('.Rprofile'); install.packages('stats', repos='https://cloud.r-project.org/')"
          else
            sudo Rscript -e "install.packages('stats', repos='https://cloud.r-project.org/')"
          fi

      - name: Install dependencies
        run: |
          uv venv
          uv pip install -e ".[dev]"
          if [ "${{ matrix.r }}" = "true" ]; then
            uv pip install -e ".[r-integration]"
          fi
        shell: bash

      - name: Lint with ruff
        run: |
          uv run ruff check .

      - name: Check formatting with black
        run: |
          uv run black . --check

      - name: Type check with mypy
        run: |
          uv run mypy .

      - name: Test with pytest
        run: |
          uv run pytest --cov=./ --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
